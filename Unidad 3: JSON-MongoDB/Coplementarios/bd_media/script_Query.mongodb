/**************** Queryng en MongoDB */

//2) Del documento que hace referencia a la película «Matrix» recuperar el array de actores.

db.multimedia.find(
    {titulo:'Matrix'},
    {_id:0,actores:1}
)

//3) Del documento que hace referencia a la película «Matrix» recuperar todos los campos de información excepto el array de actores.

db.multimedia.find(
    {titulo:'Matrix'},
    {_id:1,tipo:1,titulo:1,estreno:1,genero:1}
)

db.multimedia.find(
    {titulo:'Matrix'},
    {actores:0}
)

//4) Del documento que hace referencia a la película «Matrix» recuperar un único documento en el que aparezcan solo los campos tipo y título.

db.multimedia.find(
    {titulo:'Matrix'},
    {_id:0,tipo:1,titulo:1}
)

//5) Recuperar todos los documentos que sean de tipo «libro» y editorial «Anaya» mostrando solo el array «capítulos».

db.multimedia.find(
    {$and:[{tipo:'libro'},{editorial:'Anaya'}]},
    {_id:0, capitulos:1}
)

//6) Recuperar todos los documentos referidos a canciones que tengan una canción que se denomine «Pajaritos».

db.multimedia.find(
    {'canciones.titulo':'Pajaritos'}
)

// 7) Recuperar todos los documentos en los que «Timoteo Marino» es autor de un libro.

db.multimedia.find(
    {autor:{$all:['Timoteo Marino']}}
)

// 8) Recuperar todos los documentos de la colección media ordenados de manera decreciente por el campo «tipo».

db.multimedia.find().sort({tipo:-1})

// 9) Recuperar todos los documentos de la colección media ordenados de manera decreciente por el campo «tipo». Mostrar
// solo dos resultados.

db.multimedia.find().sort({tipo:-1}).limit(2)

// 10) Recuperar todos los documentos de la colección «media» ordenados de maner

db.multimedia.find().sort({tipo:-1}).skip(1)

// 11) Recuperar todos los documentos de la colección «media» ordenados de manera decreciente por el campo «tipo». Recuperar
// solo dos resultados y saltarse los dos primeros resultados.

db.multimedia.find().sort({tipo:-1}).limit(2).skip(2)

//12) Añadir los siguientes documentos a la colección media

db.multimedia.insertMany(
    [
        {
            tipo:'DVD',
            titulo: 'Blade Runner',
            estreno:1982
        },
        {
            tipo:'DVD',
            titulo: 'Toy Story 2',
            estreno: 2010
        }
    ]
)

//13) consultas:

    //Recuperar los documentos sobre películas cuya fecha de estreno sea mayor que 2000. En los resultados no
    //mostrar el array de actores.
    db.multimedia.find(
        {estreno:{$gt:2000}},
        {actores:0}
    )
    // Recuperar los documentos sobre películas cuya fecha de estreno sea mayor o igual que 1999. En los resultados
    // no mostrar el array de actores.
    db.multimedia.find(
        {estreno:{$gte:1999}},
        {actores:0}
    )
    // Recuperar los documentos sobre películas cuya fecha de estreno sea menor que 1999. En los resultados no
    // mostrar el array de actores.
    db.multimedia.find(
        {estreno:{$lt:1999}},
        {actores:0}
    )
    // Recuperar los documentos sobre películas cuya fecha de estreno sea menor o igual que 1999. En los resultados
    // no mostrar el array de actores.
    db.multimedia.find(
        {estreno:{$lte:1999}},
        {actores:0}
    )
    // Recuperar los documentos sobre películas cuya fecha de estreno sea mayor o igual que 1999 y menor que 2010.
    // En los resultados no mostrar el array de actores
    db.multimedia.find(
        {estreno:{$gte:1999,$lt:2010}},
        {actores:0}
    )

//14) Recuperar todos los documentos sobre libros de manera que el autor no sea «Camilo José Cela».

db.multimedia.find(
    {tipo:'libro',autor:{$ne:'Camilo José Cela'}}
)

// 15) Recuperar todos los documentos sobre películas que se hayan estrenado en alguno de los años 1999, 2005 y 2006. En los
// resultados no mostrar el array de actores.

db.multimedia.find(
    {tipo:'DVD', estreno:{$in:[1999, 2005,2006]}}
)

// 16) Recuperar todos los documentos sobre películas que no se hayan estrenado en los años 1999, 2005 y 2006. En los resultados no mostrar el array de actores.

db.multimedia.find(
    {tipo:'DVD', estreno:{$nin:[1999, 2005,2006]}}
)

// 17) Recuperar todos los documentos sobre películas que se hayan estrenado en los años 1999 y 2005 exactamente. En los
// resultados no mostrar el array de actores.

db.multimedia.find(
        {tipo:'DVD', estreno:{$all:[1999, 2005]}},
        {actores:0}
)

// 18) Recuperar todos los documentos sobre libros que hayan sido escritos por Pepe Caballero e Isabel Sanz y que además entre
// los títulos de sus capítulos haya alguno que se denomine «Bucles».

db.multimedia.find(
    {
        autor:{$all:['Pepe Caballero','Isabel Sanz']},
        'capitulos.titulo':{$in:['Bucles']}
    }
)

// 19) Recuperar todos los documentos que tomen en la clave «Título» el valor «Recuerdos» o que tome en la clave «estreno» el
// valor «1999», y que tome en la clave tipo «DVD».

db.multimedia.find(
    {
        $and:[{tipo:'DVD'} , {$or:[{titulo:'Recuerdos'}, {estreno:1999}]}]
    }
)

// 20) Considerar el documento acerca de la película «Matrix» y recuperar del array de actores:
    // Los 3 primeros actores.
    db.multimedia.find(
        {titulo:'Matrix'},
        {actores:{$slice:3}}
    )
    // Los últimos 3 actores.
    db.multimedia.find(
        {titulo:'Matrix'},
        {actores:{$slice:-3}}
    )
    // 3 actores saltándose los 2 dos primeros actores.
    db.multimedia.find(
        {titulo:'Matrix'},
        {actores:{$slice:[2,3]}}
    )

    // 4 actores saltándose los 5 últimos actores
    db.multimedia.find(
        {titulo:'Matrix'},
        {actores:{$slice:[-5,4]}}
    )

// 21) Recuperar los documentos referidos a películas tales que en su campo «estreno» tenga un valor par. No mostrar el array actores.

db.multimedia.find(
    {tipo:'DVD' , estreno:{$mod:[2,0]}},
    {actores:0}
)

// 22) Recuperar los documentos referidos a películas tales que en su campo «estreno» tenga un valor impar. No mostrar el array actores.

db.multimedia.find(
    {tipo:'DVD' , estreno:{$mod:[2,1]}},
    {actores:0}
)

// 23) Recuperar todos los documentos referidos a canciones tales que el número de canciones es exactamente 2.

db.multimedia.find( {canciones:{$size:3}} )

// 24) Recuperar todos los documentos tales que tengan un array de actores.

db.multimedia.find( {actores:{$exists:true}} )

// 25) Recuperar todos los documentos tales que no tengan un array de actores.

db.multimedia.find( {actores:{$exists:false} } )

//26) Considerar la siguiente tabla que asigna a cada tipo de
//datos BSON con un valor numérico
//Recuperar todos los documentos que tienen un campo denominado «canciones» cuyo valor sea del tipo un documento embebido.

db.multimedia.find( {canciones:{$type: 3}} )

// 27)  Recuperar todos los documentos sobre discos en los que se dan exactamente las siguientes condiciones: existe una canción
// denominada «Pajaritos» y el número de canción es el 2.

db.multimedia.find(
    {
        tipo:'CD',
        $and:[{ 'canciones.titulo':'Pajaritos'},{'canciones.cancion':2}]
    }
)

db.multimedia.find(
    {
        canciones:{$elemMatch:{cancion:2, titulo:'Pajaritos'}}
    }
)

//28) Recuperar todos los documentos sobre discos en los que no se dan exactamente las siguientes condiciones: existe una
//canción denominada «Pajaritos» y el número de canción es el 2.

db.multimedia.find(
    {
        canciones:{$not:{$elemMatch:{cancion:2, titulo:'Pajaritos'}}}
    }
)

// 30) Encontrar los DVD que sean más antiguos que 1995.

db.multimedia.find(
    {tipo:'DVD', estreno:{$lt:1995}}
)

// 31) Encontrar todos los documentos en los que en el campo «Artista» aparece la palabra «pira».

db.multimedia.find(
    {artista:/pira/}
)

// 32) Encontrar todos los documentos en los que en el campo «Artista» aparece la palabra «piratas» y además tienen un campo «Titulo».
db.multimedia.find(
    {$and:[{artista:/pira/},{titulo:{$exists:true}}]}
)